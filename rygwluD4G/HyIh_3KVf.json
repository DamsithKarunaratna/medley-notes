{"_id":"HyIh_3KVf","title":"4 - Setting up the server","body":{"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":"https://medium.com/@bryantheastronaut/react-getting-started-the-mern-stack-tutorial-feat-es6-de1a2886be50"},"1":{"type":"LINK","mutability":"MUTABLE","data":"https://github.com/dammakaru/learning-mern"}},"blocks":[{"key":"ag6qs","text":"4 - Setting up the server","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2uptu","text":"Tutorial used --> found here ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":18,"length":10,"key":0}],"data":{}},{"key":"72bbn","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"g2q0","text":"my github repo --> found here","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":19,"length":10,"key":1}],"data":{}},{"key":"2lqj2","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dlsnt","text":"##########################################################################","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3993g","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9krue","text":"Server.js","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1696c","text":" ","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"25bso","text":"//server.js\n'use strict'","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"133r1","text":"//first we import our dependenciesâ€¦\nvar express = require('express');\nvar mongoose = require('mongoose');\nvar bodyParser = require('body-parser');","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d7dnu","text":"//and create our instances\nvar app = express();\nvar router = express.Router();","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8km43","text":"//set our port to either a predetermined port number if you have set \n//it up, or 3001\nvar port = process.env.API_PORT || 3001;","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8pk3a","text":" ","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"90r42","text":"//now we should configure the API to use bodyParser and look for \n//JSON data in the request body\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2ca56","text":"//To prevent errors from Cross Origin Resource Sharing, we will set \n//our headers to allow CORS with middleware like so:\napp.use(function(req, res, next) {\n res.setHeader('Access-Control-Allow-Origin', '*');\n res.setHeader('Access-Control-Allow-Credentials', 'true');\n res.setHeader('Access-Control-Allow-Methods', 'GET,HEAD,OPTIONS,POST,PUT,DELETE');\n res.setHeader('Access-Control-Allow-Headers', 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers');","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"drc1r","text":"//and remove cacheing so we get the most recent comments\n res.setHeader('Cache-Control', 'no-cache');\n next();\n});","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bsvb9","text":"//now we can set the route path & initialize the API\nrouter.get('/', function(req, res) {\n res.json({ message: 'API Initialized!'});\n});","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"829ns","text":"//Use our router configuration when we call /api\napp.use('/api', router);","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c7gnq","text":"//starts the server and listens for requests\napp.listen(port, function() {\n console.log(`api running on port ${port}`);\n});","type":"custom-code-block-javascript","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"59kd9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]},"dateCreated":"2018-01-15T05:14:22.016Z","lastUpdated":"2018-01-15T05:19:14.502Z","notebookId":"rygwluD4G"}
